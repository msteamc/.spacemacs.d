#+TITLE: make STEAM clear
#+SETUPFILE: ~/Dropbox/zorg/org-templates/enpost.org

* Videos                                             :video:
:LOGBOOK:
CLOCK: [2019-10-20 Sun 17:06]--[2019-10-20 Sun 17:23] =>  0:17
CLOCK: [2019-10-09 Wed 22:09]--[2019-10-20 Sun 17:03] => 258:54
CLOCK: [2019-10-07 Mon 09:49]--[2019-10-09 Wed 22:09] => 60:20
CLOCK: [2019-10-06 Sun 23:34]--[2019-10-07 Mon 09:48] => 10:14
CLOCK: [2019-10-06 Sun 19:56]--[2019-10-06 Sun 22:44] =>  2:48
CLOCK: [2019-10-06 Sun 19:54]--[2019-10-06 Sun 19:56] =>  0:02
CLOCK: [2019-10-06 Sun 11:11]--[2019-10-06 Sun 19:54] =>  8:43
CLOCK: [2019-10-06 Sun 09:27]--[2019-10-06 Sun 11:11] =>  1:44
CLOCK: [2019-10-06 Sun 09:16]--[2019-10-06 Sun 09:27] =>  0:11
CLOCK: [2019-10-06 Sun 08:33]--[2019-10-06 Sun 09:16] =>  0:43
CLOCK: [2019-10-06 Sun 08:21]--[2019-10-06 Sun 08:33] =>  0:12
:END:
[2019-10-05 Sat 16:52]


* Posts
[2019-10-05 Sat 16:52]


** TODO Set up the TikZ in Emacs Org  :@Tools:Emacs:Org:TikZ:LaTeX:
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: set-up-the-tikz-in-emacs-org
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_dataset "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :image '((caption . " [**Watch**](https://youtube.com)") (preview_only . "false"))
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video" "how-do-i-make-a-video")
:EXPORT_DESCRIPTION: An introduction to setup the TikZ environment in Emacs Org File. So that in Org file, you can generate either vector graph of =pdf=  format or raster graph of =png= format. Furthermore, you can export the vector graph when latex is called and otherwise raster graph.
:ORDERED:  t
:END:
:LOGBOOK:
CLOCK: [2019-12-05 Thu 23:12]--[2019-12-05 Thu 23:35] =>  0:23
:END:

{{{titlepage(petrinetfinal)}}}

#+INCLUDE: "./post/set-up-the-tikz-in-emacs-org-mode.org"


** TODO Export Markdown and latex using Emacs Org :Emacs:Org:Hugo:LaTeX:Markdown:
:PROPERTIES:
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: export-markdown-and-latex-using-emacs-org
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video")
:EXPORT_DESCRIPTION: set up the Emacs org and ox-hugo to export the org files in markdown and latex format.
:EXPORT_FILE_NAME: index
:END:
:LOGBOOK:
CLOCK: [2019-12-07 Sat 07:46]--[2019-12-07 Sat 07:48] =>  0:02
:END:
<2019-12-07 Sat 07:46>

#+INCLUDE: "./post/export-markdown-and-latex-using-emacs-org.org"

** TODO Drawing Graphs Using TikZ in Emacs Org
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_SECTION: post
:VISIBILITY: folded
:EXPORT_HUGO_BUNDLE: drawing-graphs-using-tikz-in-emacs-org
:EXPORT_DESCRIPTION: This post collects working examples of drawing graphs using TikZ in Emacs Org
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video")
:END:
:LOGBOOK:
CLOCK: [2019-12-08 Sun 17:30]--[2019-12-08 Sun 17:33] =>  0:03
:END:
<2019-12-08 Sun 17:30>


*** Drawing a TikZ picture in Emacs Org Mode
[2019-12-11 Wed 11:35]

#+caption: a minimum working example
#+name: a-minimum-working-example
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/example3.pdf"
#+begin_src latex -n -r  :results raw :exports code
\usetikzlibrary{intersections,arrows.meta}
\begin{tikzpicture}[thin]
\draw (-1.5,0) -- (1.5,0);
\draw (0,-1.5) -- (0,1.5);
\filldraw[fill = green!20, draw = green!50!black] (0,0) circle[radius = 1cm];
\draw[help lines,very thin,step=.5cm,color=gray] (-1.5,-1.5) grid (1.5,1.5);
\draw (0,0) rectangle (.5,.5);
\draw (0,0) rectangle (-0.5,-0.5);
% relative coordinate
\draw[blue, very thick] (30:1) ++ (0,-0.5) --(0,0);
% name a path without drawing it
\path[name path = upward line] (1,0) -- (1,1);    (ref:path)
\path[name path = sloped line] (0,0) -- (30:1.5cm);
% use intersection of two path
\draw[name intersections={of = upward line and sloped line, by=x}]
     [very thick, orange] (1,0) -- (x);            (ref:intersections)
% use arrow
\draw[<->>] (0,0) -- (145:1);                      (ref:arrow1)
\draw[<-{Triangle[fill=red]}] (0,0) -- (30:1);     (ref:arrow2)
% use scope
\begin{scope}[very thick]                          (ref:scope1)
\draw (-0.4,0.4) -- (0.4,0.4);
\draw (-0.4,-0.4) -- (0.4,-0.4);
\end{scope}                                      (ref:scope2)
% use foreach
\foreach \x in {-1cm,-0.5cm,1cm}                 (ref:foreach1)
    \draw[red] (\x,-3pt) -- (\x,3pt);
\foreach \y in {-1cm,-0.5cm,1cm}
    \draw[red](-3pt,\y) -- (3pt,\y);             (ref:foreach2)
% using node
\draw (0,0)+(0.2,-0.2) node {\tiny $(0,0)$ };    (ref:node1)
\end{tikzpicture}
#+end_src

#+RESULTS: a-minimum-working-example
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/example3.pdf]]


{{{newline}}}
The generated figure is shown as:
#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(example3.pdf,example3.png)}}}

1. In [[a-minimum-working-example][the minimum working example]] line [[(path)]] , a path is named  without drawing
   it.
2. Line [[(intersections)]] gives an example of using library =intersections=. Note
   that you need to add the library using =\usetikzlibrary{intersections}=
   otherwise an error occurs during \LaTeX compiling.
3. Line [[(arrow1)]] and [[(arrow2)]] gives an example of using arrow. To make it work,
   =\usetikzlibrary{arrows.meta}= is needed. The library =arrows.meta= provides tons
   of types of arrows whick shock me when I see them the first time.
4. Line [[(scope1)]] to [[(scope2)]] gives an example of =scope= . In the environment, all
   the lines are drawn in the =very thick= style.
5. Line [[(foreach1)]] to [[(foreach2)]] gives an examplt of =foreach= . =foreach= is handy
   when you want to draw a list of objects. In [[a-minimum-working-example][the minimum working example]] , I
   draw a list of short red sticks along with the x-axis and y-axis.
6. Line [[(node1)]] is an example of =node=. The keyword =node= is typically followed by
   some options between =[]= and then some text between ={}=. Every node has flexible
   anchor options to decide where the text should be placed.
*** Another Example
[2019-12-12 Thu 20:15]

The code is shown as:
#+caption: another minimum working example
#+name: another-minimum-working-example
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/example4.pdf"
#+begin_src latex -n -r  :results raw :exports code
\usetikzlibrary{intersections,arrows.meta}
\begin{tikzpicture}[scale=3]
  \clip (-0.6,-0.2) rectangle (0.6,1.51);
  \draw[step = .5cm, help lines] (-1.4,-1.4) grid (1.4,1.4);
  \filldraw[fill=green!20,draw = green!50!black] (0,0) -- (3mm,0mm)
  arc [start angle = 0, end angle = 30,radius = 3mm] -- cycle;
  \draw[->] (-1.5,0) -- (1.5,0);
  \draw[->] (0,-1.5) -- (0,1.5);
  \draw (0,0) circle [radius=1cm];
  \foreach \x in {-1,-0.5,1}
  \draw(\x cm, 1pt) -- (\x cm, -1 pt) node [anchor = north] {$\x$};
  \foreach \y in {-1,-0.5,1}
  \draw(1pt,\y cm) -- (-1pt, \y cm) node[anchor = east] {$\y$};
\end{tikzpicture}
#+end_src

#+RESULTS: another-minimum-working-example
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/example4.pdf]]

The generated figure is shown as:
#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(example4.pdf,example4.png)}}}


*** Some Basic Rules in TikZ
[2019-12-12 Thu 14:16]

1. The basic three steps to draw a figure: 1. name a path; 2. add some
   objects along the path; 3. execute an action. At each step, many options are
   available to render your figure.
2. A path can be a =rectangle= =circle= =ellipse= =arc= =grid= =parabola, to= . Of course,
   the path can be just =move to= which is =--= . One more thing, you can specified
   horizontal and vertical lines just using =-|= or vertical then horizontal lines
   using =|-= . Notice that you can add options following =to= , but =--= cannot have
   options.
3. Along the path, nodes can be added at certain position. The position can be
   specified by absolute coordinates or relative coordinates. The coordinates
   can be specified by either xy-coordinates or polar system. Furthermore, the
   position can be calculated as intersections of two paths.
4. Once paths and nodes are ready, you can execute an action on it. An action
   can be =draw, fill, filldraw, pattern, shade, shadedraw, clip,
   useasboundingbox= . Do not be nervous. You will get familiar with them when
   you use them.
5. For the paths, nodes and actions, many options are available.
6. The options appear in =[]=. No matter it is an object or an operation, the
   contents in the following  =[]= serve as options.

   Options =[]= can be at the very beginning of the environment =tikzpicture=
   following the operation, following the object.

7. Coordinates can be specified in x-y format, polar format.
   - The easiest way is =(x,y)= which means =x= cm in the x-axis and =y= cm in the
     y-axis;
   - =(a:x)= is the polar format which means =x= cm in direction =a= degree.
8. =(<p> |- <q>)= is another way to specify coordinates for example =(30:1 |- 0,0)=
   which means the interaction of a vertical line through =(30:1)= and a
   horizontal line through =(0,0)= .
9. Relative coordinates are possible with =+= and =++= in front of =(x,y)= and =(a:x)= .
   =+= is relative to the very first coordinate whereas =++= is relative to the last
   coordinate of current path.


*** Some tips for in TikZ
[2019-12-12 Thu 15:14]

1. Walking through the *Part Tutorials and Guidelines* and *Chapter 11 Design
   Principles* in the TikZ manual, You can draw most figures you want. Diving
   into *Part 3* you can render your figures more beautiful. *Part V Libraries*
   provide many predefined patterns to save your time.
1. To use =intersections= to specify a coordinate, you need to include the
   library, i.e. =\usetikzlibrary{intersections}= is a must.
2. =\filldraw= is a good command. It draws a closed loop and fill it with color or
   pattern. The colors for filling and drawing can be different.



bibliography:~/Dropbox/research_library/zcl.bib
bibliographystyle:unsrt

** TODO Walk Through the Petri-Net In TiKZ Tutorial
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: walk-through-the-petri-net-in-tikz-tutorial
:EXPORT_DESCRIPTION: Analyze the Petri-Net tutorial in Chapter 3 of the TikZ manual line by line.
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video")
:END:
:LOGBOOK:
CLOCK: [2019-12-14 Sat 15:07]--[2019-12-14 Sat 15:21] =>  0:14
:END:
<2019-12-14 Sat 15:07>

{{{titlepage(petrinetfinal)}}}

Chapter 3 of the TikZ tutorial gives an example of Petri net. In this post, let
me work through the code line by line. During this example, more tikz libraries
are used, such as =arrows= , =decorations.pathmorphing= , =backgrounds= ,
=positioning= , =fit=, =petri= . These libraries should be added before the
=tikzpicture= environment.

#+caption: the petri net code
#+name: the-petri-net-code
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/petrinetfinal.png"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
  [node distance=1.3cm,on grid,>=stealth',bend angle=45,auto,
  every place/.style= {minimum size=6mm,thick,draw=blue!75,fill=blue!20},
  every transition/.style={thick,draw=black!75,fill=black!20},
  red place/.style= {place,draw=red!75,fill=red!20},
  every label/.style= {blue}]
  \node [place,tokens=1] (w1) {};
  \node [place] (c1) [below=of w1] {};
  \node [place] (s) [below=of c1,label=above:$s\le 3$] {};
  \node [place] (c2) [below=of s] {};
  \node [place,tokens=1] (w2) [below=of c2] {};
  \node [transition] (e1) [left=of c1] {}
  edge [pre,bend left] (w1)
  edge [post,bend right] (s)
  edge [post] (c1);
  \node [transition] (e2) [left=of c2] {}
  edge [pre,bend right] (w2)
  edge [post,bend left] (s)
  edge [post] (c2);
  \node [transition] (l1) [right=of c1] {}
  edge [pre] (c1)
  edge [pre,bend left] (s)
  edge [post,bend right] node[swap] {2} (w1);
  \node [transition] (l2) [right=of c2] {}
  edge [pre] (c2)
  edge [pre,bend right] (s)
  edge [post,bend left] node {2} (w2);

  \begin{scope}[xshift=6cm]
    \node [place,tokens=1] (w1') {};
    \node [place] (c1') [below=of w1'] {};
    \node [red place] (s1') [below=of c1',xshift=-5mm]
    [label=left:$s$] {};
    \node [red place,tokens=3] (s2') [below=of c1',xshift=5mm]
    [label=right:$\bar s$] {};
    \node [place] (c2') [below=of s1',xshift=5mm] {};
    \node [place,tokens=1] (w2') [below=of c2'] {};
    \node [transition] (e1') [left=of c1'] {}
    edge [pre,bend left] (w1')
    edge [post] (s1')
    edge [pre] (s2')
    edge [post] (c1');
    \node [transition] (e2') [left=of c2'] {}
    edge [pre,bend right] (w2')
    edge [post] (s1')
    edge [pre] (s2')
    edge [post] (c2');
    \node [transition] (l1') [right=of c1'] {}
    edge [pre] (c1')
    edge [pre] (s1')
    edge [post] (s2')
    edge [post,bend right] node[swap] {2} (w1');
    \node [transition] (l2') [right=of c2'] {}
    edge [pre] (c2')
    edge [pre] (s1')
    edge [post] (s2')
    edge [post,bend left] node {2} (w2');
  \end{scope}
  \begin{scope}[on background layer]
    \node (r1) [fill=black!10,rounded corners,fit=(w1)(w2)(e1)(e2)(l1)(l2)] {};
    \node (r2) [fill=black!10,rounded corners,fit=(w1')(w2')(e1')(e2')(l1')(l2')] {};
  \end{scope}
  \draw [shorten >=1mm,-to,thick,decorate,
  decoration={snake,amplitude=.4mm,segment length=2mm,
    pre=moveto,pre length=1mm,post length=2mm}]
  (r1) -- (r2) node [above=1mm,midway,text width=3cm,align=center]
  {replacement of the \textcolor{red}{capacity} by \textcolor{red}{two places}};
\end{tikzpicture}
#+end_src


#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(petrinet.pdf,petrinet.png)}}}
*** Walk Through It
[2019-12-17 Tue 22:48]

#+caption: walk through the code
#+name: walk through the code
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/petrinetdetail.png"
#+begin_src latex -n -r :results raw :exports code
\begin{tikzpicture}
  [node distance = 1.3cm, on grid, >=stealth', bend angel = 45, auto,
  every place/.style= {minimum size = 6mm, thick,draw=blue!75,fill=blue!20},
  every transition/.style={thick,draw=black!75,fill=black!20},
  red place/.style = {place,draw = red!75,fill = red!20},
  every label/.style = {red}]
  \node [place,tokens=1] (w1)           {};
  \node [place]          (c1)  [below=of w1] {};
  \node [place]          (s)   [below=of c1,label=above:$s\le 3$] {};
  \node [place]          (c2)  [below=of s]                       {};
  \node [place]          (w2)  [below=of c2]                      {};

  \node [transition] (e1) [left = of c1] {}
    edge[pre,bend left]               (w1)
    edge[post,bend right]             (s)
    edge[post]                        (c1);
  \node [transition] (e2) [left = of c2] {}
    edge[pre,bend right]              (w2)
    edge[post,bend left]              (s)
    edge[post]                        (c2);
  \node [transition] (l1) [right = of c1] {}
  edge[pre]                         (c1)
  edge[pre,bend left]               (s)
  edge[post,bend right] node[swap] {2} (w1);
  \node [transition] (l2) [right = of c2] {}
  edge[pre]                         (c2)
  edge[pre,bend right] (s)
  edge[post,bend left] node{2} (w2);
\begin{scope}[xshift=6cm]
  \node [place,tokens=1] (w1')           {};
  \node [place]          (c1')  [below=of w1'] {};
  \node [red place]          (s1')   [below=of c1',,xshift=-5mm,label=left:$s$] {};
  \node [red place,tokens=3]          (s2')  [below=of c1',xshift=5mm,label=right:$\bar s$] {};
  \node [place]  (c2') [below=of s1',xshift=5mm] {};
  \node [place]  (w2') [below=of c2'] {};

  \node [transition] (e1') [left = of c1'] {}
  edge [pre,bend left] (w1')
  edge [post] (s1')
  edge [pre] (s2')
  edge [post] (c1');
  \node [transition] (e2') [left=of c2'] {}
  edge [pre,bend right] (w2')
  edge [post] (s1')
  edge [pre] (s2')
  edge [post] (c2');
  \node [transition] (l1') [right=of c1'] {}
  edge [pre] (c1')
  edge [pre] (s1')
  edge [post] (s2')
  edge [post,bend right] node[swap] {2} (w1');
  \node [transition] (l2') [right=of c2'] {}
  edge [pre] (c2')
  edge [pre] (s1')
  edge [post] (s2')
  edge [post,bend left] node {2} (w2');
\end{scope}
\begin{scope}[on background layer]
  \node (r1) [fill=black!40,rounded corners,fit = (w1)(w2)(e1)(e2)(l1)(l2)] {};
  \node (r2) [fill=black!40,rounded corners,fit=(w1')(w2')(e1')(e2')(l1')(l2')] {};
\end{scope}
\draw [shorten >=1mm,-to, thick, decorate, decoration ={snake,amplitude=.4mm,segment length=2mm,pre=moveto, pre length=1mm, post length = 2mm}]
(r1) -- (r2) node [above=1mm,midway,text width = 3cm, align = center]
{replacement of the \textcolor{red}{capacity} by \textcolor{red}{two places}};
\end{tikzpicture}
#+end_src

#+RESULTS: walk through the code
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/petrinetdetail.png]]


#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(petrinetdetail.pdf,petrinetdetail.png)}}}


** TODO Walk Through the Tutorial 4 of TikZ Manual
:PROPERTIES:
:EXPORT_FILE_NAME: index
:LATEX_TITLE: Walk Through the Tutorial 4 of TikZ Manual
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: walk-through-the-tutorial-4-of-tikz-manual
:EXPORT_DESCRIPTION: Analyze the Elements Example in Chapter 3 of the TikZ manual line by line.
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video")
:END:
:LOGBOOK:
CLOCK: [2019-12-19 Thu 22:36]--[2019-12-19 Thu 22:37] =>  0:01
:END:
<2019-12-19 Thu 22:36>

{{{titlepage(elements)}}}

#+caption: Euclid Amber version of the Elements
#+name: Euclid Amber version of the Elements
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/elements.png"
#+begin_src latex -n -r :results raw :exports code
\begin{tikzpicture}
  [thick,help lines/.style={thin,draw=black!50}]
  \def\A{\textcolor{input}{$A$}}
  \def\B{\textcolor{input}{$B$}}
  \def\C{\textcolor{output}{$C$}}
  \def\D{$D$}
  \def\E{$E$}

  \colorlet{input}{blue!80!black}
  \colorlet{output}{red!70!black}
  \colorlet{triangle}{orange}

  \coordinate [label=left:\A] (A) at ($(0,0) + .0*(rand,rand)$);
  \coordinate [label=right:\B] (B) at ($(1.25,0.25) + .0*(rand,rand)$);

  \draw [input] (A) -- (B);

  \node [name path=D,help lines,draw,label=left:\D] (D) at (A) [circle through = (B)] {};
  \node [name path=E,help lines,draw,label=right:\E] (E) at (B) [circle through = (A)] {};

  \path [name intersections = {of =D and E, by={[label=above:\C]C}}];
  \draw [output] (A) -- (C) -- (B);

  \foreach \point in {A,B,C}
  \fill[black,opacity=.5] (\point) circle (2pt);
  \begin{pgfonlayer}{background}
    \fill[triangle!80] (A) -- (C) -- (B) -- cycle;
  \end{pgfonlayer}

  % \node [below right, text width = 10cm,align = justify] at (4,3) {
  %   \small\textbf{Proposition I} \par
  %   \emph{To construct an \textcolor{triangle}{equilateral triangle}
  %     on a given \textcolor{input}{finite straight line.}}
  %   \par \vskip 1em
  %   Let \A\B\ be the given \textcolor{input}{finite straight line}. \dots
  % };

\end{tikzpicture}
#+end_src

#+RESULTS: Euclid Amber version of the Elements
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/elements.png]]



#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(elements.pdf,elements.png)}}}
*** Proposition II
[2019-12-20 Fri 21:01]

#+caption: Proposition II
#+name: Proposition II
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/propositionII.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
[thick,help lines./style={thin,draw=black!50}]
\def\A{\textcolor{orange}{$A$}}
\def\B{\textcolor{input}{$B$}}
\def\C{\textcolor{input}{C}}
\def\D{$D$}
\def\E{$E$}
\def\F{$F$}
\def\G{$G$}
\def\H{$H$}
\def\K{$K$}
\def\L{\textcolor{output}{$L$}}

\colorset{input}{blue!80!black}
\colorset{output}{red!70!black}

\coordinate [label=left:\A] (A) at (0,0) ;
\coordinate [label=right:\B] (B) at (1,0.2);
\coordinate [label=above:\C] (C) at (1,2);

\draw [input] (B) -- (C);
\draw [help lines] (A) -- (B);

\coordinate [label=above:\D] (D) at ($(A)!.5!(B)!{sin(60)*2}!90:(B)$);

\draw [help lines] (D) -- ($(D)!3.75!(A)$) coordinate [label=-135:\E] (E);
\draw [help lines] (D) -- ($(D)!3.75!(B)$) coordinate [label=-45:\F] (F);

\node (H) at (B) [name path =H, help lines, circle through=(C),draw,label=135:\H] {};
\path [name path=B--F] (B) -- (F);
\path [name intersections = {of= H and B--F,by = {[label=right:\G]G}}];

\node (K) at (D) [name path =K,help lines,circle through = (G),draw,label=135:\K]{};
\path [name path = A--E] (A) -- (E);

\path [name intersections = {of = K and A--E,by={[label=below:\L]L}}];

\draw [outptu] (A) -- (L);
\foreach \point in {A,B,C,D,G,L}
\fill [black,opacity=0.5] (\point) circle (2pt);

\end{tikzpicture}
#+end_src


#+RESULTS: Proposition II
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/propositionII.pdf]]


#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(propositionII.pdf,propositionII.png)}}}
*** A Lecture Map Tutorial
[2019-12-22 Sun 07:45]

#+caption: A Lecture Map Tutorial
#+name: A Lecture Map Tutorial
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/lecturemap.pdf"
#+begin_src latex -n -r :results raw :exports none
\def\lecture#1#2#3#4#5#6{
  \node [annotation,#3, scale=0.65,text width=4cm, inner sep = 2mm] at (#4){
    Lecture #1:\textcolor{orange}{\textbf{#2}}
    \list{--}{\topsep=2pt\itemsep=0pt\parsep=0pt
    \parskip=0pt\labelwidth=8pt\leftmargin=8pt
    \itemindent=0pt\labelsep=2pt}
  #5
  \endlist
};
\node[anchor=base west] at (cal-#6.base east) {\textcolor{orange}{\textbf{#2}}};
}
\noindent

\begin{tikzpicture}[scale=1.4]
\begin{scope}
  [mindmap,
  every node/.style={concept, circular drop shadow,execute at begin node=\hskip0pt},
  root concept/.append style={concept color=black,fill=white,line width=1ex, text=black,font=\large\scshape},
  text=white,
  computational problems/.style={concept color=red,faded/.style={concept color=red!50}},
  computational models/.style={concept color=blue,faded/.style={concept color=blue!50}},
  measuring complexity/.style={concept color=orange,faded/.style={concept color=orange!50}},
  solving problems/.style={concept color=green!50!black,faded/.style={concept color=green!50!black!50}},
  grow cyclic,
  level 1/.append style={level distance=4.5cm,sibling angle=90,font=\scshape},
  level 2/.append style={level distance=3cm,sibling angle=45,font=\large}]

  \node [root concept](Computational Complexity) {Computational Complexity}
  child [computational problems] {node [yshift=-1cm] (Computational Problems){Computational Problems}
    child {node (Problem Measures) {Problem Measures}}
    child {node (Problem Aspects) {Problem Aspects}}
    child[faded] {node (Problem Domains) {Problem Domains}}
    child {node (Key Problems) {Key Problems}}
  }
  child [computational models] {node [yshift=-1cm] (Computational Models){Computational Models}
    child {node (Turing Machine){ Turing Machines}}
    child[faded] {node (Random-Access Machines) {Random-Access Machies}}
    child {node (Circuits){Circuits}}
    child[faded] {node (Binary Decision Diagrams){Binary Decision Diagrams}}
    child {node (Oracle Machine){Oracle Machines}}
    child {node (Programming in Logic){Programming in Logic}}
  }
  child [measuring complexity]{node [yshift=1cm](Measuring Complexity){Measuring Complexity}
    child {node (Complexity Measures) {Complexity Measures}}
    child {node (Classifying Complexity) {Classifying Complexity}}
    child {node (Comparing Complexity) {Comparing Complexity}}
    child[faded] {node (Describing Complexity) {Describing Complexity}}
  }
  child [solving problems] {node [yshift=1cm](Solving Problems) {Solving Problems}
    child {node (Exact Algorithms){Exact Algorithms}}
    child {node (Randomization){Randomization}}
    child {node (Fixed-parameter Algorithms){Fixed-parameter Algorithms}}
    child {node (Parallel Computation){Parallel Computation}}
    child {node (Partial Solutions){Partial Solutions}}
    child {node (Approximation){Approximation}}
  };
\end{scope}
\tiny
\calendar[day list downward,
          month text=\textcolor{red}{\%mt} \%y-,
          month yshift=3.5em,
          name=cal,
          at={(-.5\textwidth-5mm,.5\textheight)},
          dates=2009-04-01 to 2009-06-last]
 if(weekend)
     [black!25]
 if(day of month=1){
   \node at(0pt,1.5em) [anchor=base west] {\small\tikzmonthtext};
};
  \lecture{1}{Computational Problems}{above,xshift=-5mm,yshift=5mm}{Computational Problems.north}{
  \item Knowledge of several key problems
  \item Knowledge of problem encodings
  \item Being able to formalize problems
  }{2009-04-08}
  \lecture{2}{Computational Models}{above left}{Computational Models.west}{
  \item Knowledge of Turing machines
  \item Being able to compare the computational power of different models
  }{2009-04-15}
  \begin{pgfonlayer}{background}
      \clip[xshift=-1cm] (-.5\textwidth,-.5\textheight) rectangle ++(1.1\textwidth,1.1\textheight);

    \colorlet{upperleft}{green!50!black!25}
    \colorlet{upperright}{orange!25}
    \colorlet{lowerleft}{red!25}
    \colorlet{lowerright}{blue!25}

    \fill [upperleft] (Computational Complexity) rectangle ++(-20,20);
    \fill [upperright] (Computational Complexity) rectangle ++(20,20);
    \fill [lowerleft] (Computational Complexity) rectangle ++(-20,-20);
    \fill [lowerright] (Computational Complexity) rectangle ++(20,-20);

    \shade[left color=upperleft,right color=upperright]
    ([xshift=-1cm]Computational Complexity) rectangle ++(2,20);
    \shade[left color=lowerleft,right color=lowerright]
    ([xshift=-1cm]Computational Complexity) rectangle ++(2,-20);
    \shade[top color=upperleft,bottom color=lowerleft]
    ([yshift=-1cm]Computational Complexity) rectangle ++(-20,2);
    \shade[top color=upperright,bottom color=lowerright]
    ([yshift=-1cm]Computational Complexity) rectangle ++(20,2);
  \end{pgfonlayer}
\end{tikzpicture}
#+end_src

#+RESULTS: A Lecture Map Tutorial
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/lecturemap.pdf]]



#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.9\textwidth :align center
{{{if-latex(lecturemap.pdf,lecturemap.png)}}}

** TODO Walk Through the Tutorial 5 of TikZ Manual
:PROPERTIES:
:EXPORT_FILE_NAME: index
:LATEX_TITLE: Walk Through the Tutorial 5 of TikZ Manual
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: walk-through-the-tutorial-5-of-tikz-manual
:EXPORT_DESCRIPTION: summary of this post
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("my-workflow-of-creating-a-video")
:END:
:LOGBOOK:
CLOCK: [2019-12-23 Mon 22:03]--[2019-12-23 Mon 22:04] =>  0:01
:END:
<2019-12-23 Mon 22:03>

{{{titlepage(diagram)}}}

#+caption: Diagrams as Simple Graphs
#+name: Diagrams as Simple Graphs
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/diagram.png"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
  [>=stealth',black!50,text=black,thick,
  every new ->/.style       = {shorten >=1pt},
  graphs/every graph/.style = {edges=rounded corners},
  skip loop/.style          = {to path={-- ++(0,#1) -| (\tikztotarget)}},
  hv path/.style            = {to path={-| (\tikztotarget)}},
  vh path/.style            = {to path={|- (\tikztotarget)}},
  nonterminal/.style        ={
    rectangle, minimum size=6mm,very thick,draw=red!50!black!50,top color=white,bottom color=red!50!black!20,font=\itshape,text height=1.5ex,text depth=.25ex},
  terminal/.style           ={
    rounded rectangle,minimum size=6mm,very thick,draw=black!50,top color=white,bottom color=black!20,font=\ttfamily,text height=1.5ex,text depth=.25ex},
  shape                     = coordinate
  ]
  \graph [grow right sep, branch down=7mm,simple]{
    / -> unsigned integer[nonterminal] -- p1 -> "." [terminal] -- p2 -> digit[terminal] -- p3 -- p4 -- p5 -> E[terminal] -- q1 -> [vh path]
    {[nodes={yshift=7mm}]
      "+"[terminal], q2, "="[terminal]
    } -> [hv path]
    q3 -- /unsigned integer [nonterminal] -- p6 -> /;
    p1 ->[skip loop=5mm] p4;
    p3 ->[skip loop=-5mm] p2;
    p5 ->[skip loop=-11mm] p6;
    q1 -- q2 -- q3;
  };
\end{tikzpicture}
#+end_src

#+RESULTS: Diagrams as Simple Graphs
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/diagram.png]]



#+ATTR_HTML:  :width 800 :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(diagram.pdf,diagram.png)}}}

** TODO Signals and Systems Chapter 1 Problems
:PROPERTIES:
:EXPORT_FILE_NAME: index
:LATEX_TITLE: Signal and System Chapter 1 Problems
:EXPORT_HUGO_SECTION: post
:EXPORT_HUGO_BUNDLE: signal-and-system-chapter-1-problems
:EXPORT_DESCRIPTION: summary of this post
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_project "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("signal and systems")
:END:
<2020-01-02 Thu 23:32>

{{{titlepage(eulerEquation)}}}

*** Basic Problems With Answers
[2020-01-08 Wed 21:19]

**** DONE Problem 1.1 and Problem 1.2
     [2020-01-12 Sun 12:45]


  #+ATTR_LATEX: :options []{prob:1.3}
  #+name: prob11
  #+begin_prob
   Problem 1.1: Express each of the following complex numbers in /Cartesian/ form \(x+iy\):
 \begin{equation*}
 \begin{array}{ccc}
  \frac{1}{2}e^{i\pi}  & \frac{1}{2}e^{-i\pi}  & e^{i\pi/2}  \\
  e^{-i\pi/2}         & e^{i5\pi/2}  & \sqrt{2}e^{i\pi/4}  \\
  \sqrt{2}e^{i9\pi/4} & \sqrt{2}e^{-i9\pi/4}  & \sqrt{2} e^{-i\pi/4}
 \end{array}
 \end{equation*}
  #+end_prob

 #+ATTR_LATEX: :options []{prob:1.3}
 #+name: prob12
 #+begin_prob
Problem 1.2: Express each of the following complex numbers in /polar/ form (\(re^{i\theta},
 -\pi < \theta \leq \pi\)):
 \begin{equation*}
 \begin{array}{c{3cm}c{3cm}c{3cm}}
 5 & -2 & -3i \\
 \frac{1}{2} - i \frac{\sqrt{3}}{2} & 1+i & (1-i)^{2} \\
 i(1-i)  & \frac{1+i}{1-i}  & \frac{\sqrt{2} + i \sqrt{2}}{1+i\sqrt{3}}
 \end{array}
 \end{equation*}
 #+end_prob

 First, let's figure them out using the Euler's formula. For the nine complex
 numbers in  [[prob11][Problem 1.1]], we have:
 \begin{eqnarray*}
 \tfrac{1}{2} e^{i\pi } &=&  \tfrac{1}{2} (\cos(\pi) + i\sin(\pi) ) = \tfrac{1}{2} \cos(\pi) = -\tfrac{1}{2} \\
 \tfrac{1}{2} e^{-i\pi} &=& \tfrac{1}{2}  (\cos(-\pi) + i\sin(-\pi) ) = \tfrac{1}{2} \cos(-\pi) = -\tfrac{1}{2} \\
 e^{i\pi/2} &=& \cos(\pi/2) + i \sin(\pi/2) = i \\
 e^{-i\pi/2} &=& \cos(-\pi/2) + i \sin(-\pi/2) = -i \\
 e^{i5\pi/2} &=& \cos(5\pi/2) + i \sin(5\pi/2) = \cos(2\pi + \pi/2) + i \sin(2\pi + \pi/2) = i \sin(\pi/2) = i \\
 \sqrt{2}e^{i\pi/4} &=& \sqrt{2} ( \cos(\pi/4) + i \sin(\pi/4) ) = \sqrt{2} ( \tfrac{\sqrt{2}}{2} + i\tfrac{\sqrt{2}}{2}  ) = 1 + i \\
  \sqrt{2} e^{i9 \pi/4} &=& \sqrt{2} ( \cos(9\pi/4) + i \sin(9\pi/4) ) = 1 + i \\
  \sqrt{2} e^{-i9 \pi/4} &=& \sqrt{2} ( \cos(-9\pi/4) + i \sin(-9\pi/4) ) = 1 - i \\
  \sqrt{2} e^{-i \pi/4} &=& \sqrt{2} ( \cos(-\pi/4) + i \sin(-\pi/4) ) = 1 - i
 \end{eqnarray*}

 For the nine complex numbers in  [[prob12][Problem 1.2]] , we have:

 \begin{eqnarray*}
  5 &=& 5 e^{i0} = 5 e^{i(2\pi n)}, n\in \{\ldots, -2,-1,0,1,2,\ldots \} \\
  -2 &=& 2 e^{i\pi} = -2 e^{i0} \\
  -3i &=& 3 e^{-i\pi} \\
  \tfrac{1}{2} - i \tfrac{\sqrt{3}}{2}  &=& e^{-i\pi/3} \\
  1+i &=& \sqrt{2} e^{i\pi/4} \\
  (1-i)^{2} &=& ( \sqrt{2} e^{-i\pi/4} )^{2} = 2 e^{-i\pi/2} \\
  i(1-i) &=& 1 - i = \sqrt{2} e^{-i\pi/4} \\
  \tfrac{1+i}{1-i} &=& \tfrac{ \sqrt{2}e^{i\pi/4} } { \sqrt{2}e^{-i\pi/4} } = e^{i\pi/2} \\
  \tfrac{\sqrt{2} + i \sqrt{2}}{1+i\sqrt{3}} &=& \tfrac{ 2e^{i\pi/4} }{ 2 e^{i\pi/3} } = e^{-i\pi/12}
 \end{eqnarray*}


 Every complex number \(a+ib\) can be visualized in the complex plane
 \(\mathbb{C}\). It can be viewed either as the point with the coordinate
 \((a,b)\) or as a vector starting from \(0,0\) to the point \((a,b)\).

 Also every complex number \(a+ib\) can be represented in the exponential form
 conveniently by using the Euler's formula \(e^{i\alpha} = \cos\alpha +
 i\sin\alpha\). One complex number have unique Cartesian form but do not have a
 unique expoential form. Taking \(1+i\) for example, its expoential form can be
 \(\sqrt{2}e^{i(\pi/4 + 2n\pi)}, n\in \{ \ldots, -2,-1,0,1,2,\ldots \}\). When we
 express a complex number in expoential form, it helps to keep a concept of
 rotation in mind. In the complex plane \(\mathbb{C}\), a complex number will
 return to itself if it rotates a multiple of \(2\pi\) around the origin point
 with radius equal to its modulus. please keep the concept of roatation in mind
 and it will become increasingly important during our later study.

 In the development of complex analysis, \(a+ib\) has another form \(r\angle
 \theta\), where \(r\) is the modulus and \(\theta\) the argument (or the angle).
 Obviously, this notation is not as good as the expoential form, espacialy when
 we want to do complex analysis such as differentiation and integration. We just
 mention it here for the sake of completion. The expoential form will be deployed
 from now on.


 #+caption: Euler Example
 #+name: EulerExample
 #+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/eulerEquation.pdf"
 #+begin_src latex -n -r  :results raw :exports none
 \begin{tikzpicture}
 [scale=3,line cap=round,
 axes/.style=,
 important line/.style={very thick},
 information text/.style={rounded corners,fill=red!10, inner sep=1ex}]
 \colorlet{anglecolor}{green!50!black}
 \colorlet{sincolor}{red}
 \colorlet{tancolor}{orange!80!black}
 \colorlet{coscolor}{blue}


 \draw[step=0.5cm,gray!50] (-2.3,-2.3) grid (2.3,2.3);
 \draw[radius=1cm] (0,0) circle;

 \begin{scope}[axes]
   \draw[->] (-2.6,0)  -- (2.6,0) node[at end,below] {$\mathrm{Re}$} coordinate(x axis);
   \draw[->] (0,-2.6) -- (0,2.6) node[at end,right] {$\mathrm{Im}$} coordinate(y axis);

   \foreach \x/\xtext in {-1,1}
     \draw[xshift=\x cm] (0pt,1pt) -- (0pt,-1pt) node[below,fill=white] {$\xtext$};
   \foreach \y/\ytext in {-1,1}
     \draw[yshift=\y cm] (1pt,0pt) -- (-1pt,0pt) node[left,fill=white] {$\ytext$};
 \end{scope}

 \filldraw[fill=green!20,draw=anglecolor] (0,0) -- (2mm,0pt) arc [start angle=0, end angle=70,radius=2mm] -- cycle;

 \draw[important line,sincolor] (70:1cm) -- node[right=1pt,fill=white] {$\sin\alpha$} (70:1cm |- x axis);
 \draw[important line,coscolor] (70:1cm |- x axis) -- node[at start,below=2pt] {$\cos\alpha$} (0,0);

 \draw (0,0) -- (70:1cm);

 \filldraw[draw=gray,fill=gray,radius=0.5pt](70:1cm) circle node[above right] {\huge ${e^{i\alpha} = { \color{blue}{\cos\alpha} } + i\color{red}{ \sin\alpha} }$};

 \draw[-{Stealth}] (0,0) -- (-140:2cm) node[below=5pt] {\huge $z={ \color{blue}{a} }+i{ \color{red}{b} }=re^{i\theta}$};
 \draw[important line,red] (-140:2.025cm |- x axis) -- (-140:2.025cm) node[midway,left] {$b$};
 \draw[important line,blue] (-140:2.025cm |- x axis) -- (0,0) node[midway,above]{$a$};

 \filldraw[fill=black,radius=0.3mm]  (-140:2.025cm) circle ;

 \filldraw[fill=red!20,draw=red] (0,0) -- (1.5mm,0pt) arc [start angle=0, end angle=-140,radius=1.5mm] -- cycle;
 \node at (35:1.6mm) [anglecolor] {$\alpha$};
 \node at (-70:1.mm) [red] {$\theta$};


 \end{tikzpicture}
 #+end_src


 #+RESULTS: EulerExample
 [[file:~/Dropbox/mstemc_hugo/static/img/tikz/eulerEquation.pdf]]


 #+ATTR_HTML:  :width 80% :align center
 #+ATTR_LATEX: :width 0.8\textwidth :align center
 {{{if-latex(eulerEquation.pdf,eulerEquation.png)}}}

 Now, let's go back to [[prob11][Problem 1.1]] and Problem [[prob12][Problem
 1.2]]. It's easy to figure the answers out using the Euler's formula. Let's do
 more to show them on the complex plane keeping the concept of rotation in mind.

 #+caption: Problem 1.1
 #+name: Problem1_1
 #+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/problem1_1.pdf"
 #+begin_src latex -n -r :results raw :exports none
 \begin{tikzpicture}
 [scale=3,line cap=round,
 axes/.style=,
 important line/.style={very thick},
 information text/.style={rounded corners,fill=red!10, inner sep=1ex}]


 \colorlet{anglecolor}{green!50!black}
 \colorlet{sincolor}{red}
 \colorlet{tancolor}{orange!80!black}
 \colorlet{coscolor}{blue}
 \coordinate (0) at (0,0);


 \draw[step=0.25cm,gray!50] (-1.5,-1.5) grid (1.5,1.5);
 \draw[radius=1cm] (0,0) circle;

 %% pi/4
 \draw[-Stealth,important line] (0,0) -- (45:1.414cm)
      node[circle, inner sep=2pt,radius=0.2pt,fill=black]{}
      node[below right] {$\sqrt{2}e^{i\pi/4},\sqrt{2}e^{i9\pi/4}$};

 \draw[-Stealth,important line] (0,0) -- (45:1.414cm) coordinate (45)
      node[circle, inner sep=2pt,radius=0.2pt,fill=black]{}
      node[below right] {$\sqrt{2}e^{i\pi/4},\sqrt{2}e^{i9\pi/4}$};
 \filldraw[fill=blue!20,draw=anglecolor,nearly opaque] (0,0) -- (4mm,0pt) arc [start angle=0, end angle=45,radius=4mm]-- cycle;
 \draw [draw=anglecolor,->] (4mm,0pt) arc [start angle=0, end angle=45,radius=4mm] node[midway,right] {$\pi/4$};

 \draw[-Stealth,important line] (0,0) -- (-45:1.414cm) coordinate (m45)
      node[circle, inner sep=2pt,radius=0.2pt,fill=black]{}
      node[below right] {$\sqrt{2}e^{-i\pi/4},\sqrt{2}e^{-i9\pi/4}$};
 \filldraw[fill=cyan!20,draw=anglecolor,nearly opaque] (0,0) -- (4mm,0pt) arc [start angle=0, end angle=-45,radius=4mm]-- cycle;
 \draw [draw=anglecolor,->] (4mm,0pt) arc [start angle=0, end angle=-45,radius=4mm] node[midway,right] {$-i\pi/4$};
 %% pi/2
 \draw[-Stealth,important line] (0,0) -- (90:1cm)
      node[circle, inner sep=2pt,radius=0.2pt,fill=black]{}
      node[above right] {$e^{i\pi/2},e^{i5\pi/2}$};
 \filldraw[fill=blue!20!green,draw=anglecolor,nearly opaque] (0,0) -- (3mm,0pt) arc [start angle=0, end angle=90,radius=3mm]-- cycle;
 \draw [draw=anglecolor,->] (3mm,0pt) arc [start angle=0, end angle=90,radius=3mm] node[at end,above right] {$\pi/2$};


 \draw[-Stealth,important line] (0,0) -- (-90:1cm)
      node[circle, inner sep=2pt,radius=0.2pt,fill=black]{}
      node[below right] {$e^{-i\pi/2},e^{-i5\pi/2}$};
 \filldraw[fill=cyan!20!red,draw=anglecolor,nearly opaque] (0,0) -- (3mm,0pt) arc [start angle=0, end angle=-90,radius=3mm]-- cycle;
 \draw [draw=anglecolor,->] (3mm,0pt) arc [start angle=0, end angle=-90,radius=3mm] node[at end,below right] {$-\pi/2$};


 \draw[-Stealth,important line] (0,0) -- (180:0.5cm) coordinate (number1) node[above] {$\color{green}{ \frac{1}{2}e^{i\pi} }$};
 \draw[-Stealth,important line] (0,0) -- (180:0.5cm) coordinate (number1) node[below] {$\color{red}{ \frac{1}{2}e^{-i\pi} }$};
 \coordinate (pointAtX) at (2,0) ;
 \fill[black,radius=1pt] (number1) circle;
 \draw pic [ draw,->,draw=green,fill=green!30,nearly opaque] {angle=pointAtX--O--number1};
 \node[green] at (-1.5mm,2mm) {$\color{black}{\pi}$};
 \draw pic [ draw,<-,draw=red,fill=red!30,nearly opaque] {angle=number1--O--pointAtX};
 \node[red] at (-1.5mm,-2mm) {$\color{black}{-\pi}$};


 \begin{scope}[axes]
   \draw[->] (-1.6,0)  -- (1.6,0) node[at end,below] {$\mathrm{Re}$} coordinate(x axis);
   \draw[->] (0,-1.6) -- (0,1.6) node[at end,right] {$\mathrm{Im}$} coordinate(y axis);

   \foreach \x/\xtext in {-1,1}
     \draw[xshift=\x cm] (0pt,1pt) -- (0pt,-1pt) node[below,fill=white] {$\xtext$};
   \foreach \y/\ytext in {-1,1}
     \draw[yshift=\y cm] (1pt,0pt) -- (-1pt,0pt) node[left,fill=white] {$\ytext$};
 \end{scope}

 \end{tikzpicture}
 #+end_src

 #+RESULTS: Problem1_1
 [[file:~/Dropbox/mstemc_hugo/static/img/tikz/problem1_1.pdf]]


 #+caption: visualized the complex numbers from Problem [[prob11][Problem 1.1]] in the complex plan
 #+name: problem1-1
 #+ATTR_HTML:  :width 80% :align center
 #+ATTR_LATEX: :width 0.8\textwidth :align center
 {{{if-latex(problem1_1.pdf,problem1_1.png)}}}

 From Figure [[problem1-1]] , taking \(\color{green}{\tfrac{1}{2}e^{i\pi}}\) and
 \(\color{red}{\tfrac{1}{2}e^{-i\pi}}\) for example, in the complex plane, they
 are the same point \(-\tfrac{1}{2}\) which means \(-\tfrac{1}{2}\) can be
 reached by rotating \(\tfrac{1}{2}\) with angle \(\pi\) clockwise or with angle
 \(-\pi\) anti-clockwise. Essentially, this is because that \(e^{i\theta} =
 e^{i(\theta + 2n\pi)}, n\in \{\ldots,-2,-1,0,1,2,\ldots\}\). It's
 straightforward that \(e^{i\pi} = e^{i(\pi + 2(-1)\pi)} = e^{-i\pi}\).

 In the end of [[prob11][Problem 1.1]] and [[prob12][Problem 1.2]], I want to say
 more about expressing \(\tfrac{1+i}{1-i}\) in its polar form. There are two
 methods to get the polar form:
 1. multiply the fraction's numerator and denominator by \(( 1 + i )\)

    So we have:
    \begin{eqnarray*}
    \frac{1+i}{1-i}& = & \frac{(1+i)(1+i)}{(1-i)(1+i)} \\
    &=& \frac{2i}{2} = i
    \end{eqnarray*}

 2. express the numerator and denominator in expoential form first, then do the
    following calculation.

    \begin{eqnarray*}
    \frac{1+i}{1-i} &=& \frac{\sqrt{2}e^{i\pi/4}}{\sqrt{2}e^{-i\pi/4}}  \\
    &=& e^{i2\pi/4} = e^{i\pi/2} = i
    \end{eqnarray*}
**** Problem 1.3
[2020-01-12 Sun 12:46]

  #+ATTR_LATEX: :options []{prob:1.3}
  #+NAME: prob13
  #+begin_prob
  Problem 1.3: Determine the values of \(P_{\infty}\) and \(E_{\infty}\) for each
  of the following signals:
  \begin{equation*}
  \begin{array}{ll}
  \mathrm{(a)} \quad x_{1}(t) = e^{-2t}u(t) & \mathrm{(b)} \quad x_{2}(t) = e^{i(2t + \pi/4)} \\
   \mathrm{(c)} \quad x_{3}(t) = \cos(t) & \mathrm{(d)} \quad x_{1}[n] = (\tfrac{1}{2})^{n} u[n] \\
   \mathrm{( e )} \quad x_{2}[n] = e^{i(\pi/2n + \pi/8)} & \mathrm{(f)} \quad x_{3}[n] = \cos(\tfrac{\pi}{4}n)
  \end{array}
  \end{equation*}
  #+end_prob

Before solving this problem, let's review the definition of \(P_{\infty}\) and
\(E_{\infty}\). For a continuous time signal \(x(t)\), we have
\begin{eqnarray}
\label{eq:2}
E_{\infty}&=& \lim_{T\to \infty} \int_{-T}^{T} |x(t)|^{2}\mathrm{d}t \\
P_{\infty}&=& \lim_{T\to \infty} \frac{1}{2T}\int_{-T}^{T} |x(t)|^{2}\mathrm{d}t = \lim_{T\to\infty} \frac{E_{\infty}}{2T}
\end{eqnarray}
For a discrete time signal \(x[n]\), we have:
\begin{eqnarray}
\label{eq:3}
E_{\infty}&=& \lim_{N\to \infty} \sum_{n=-N}^{+N} |x[n]|^{2} \\
P_{\infty}&=& \lim_{N\to \infty} \frac{1}{2N+1} \sum_{n=-N}^{+N} |x[n]|^{2} = \lim_{N\to\infty} \frac{E_{\infty}}{2N+1}
\end{eqnarray}

Equation (\ref{eq:2})(\ref{eq:3}) are not only mathmatical definitions but also
related to physical quantities such as power and energy in a physical system.
For an electric circuit, taking the voltage \(v(t)\) and current \(i(t)\) across
a resistor for example, the power at time \(t\) can be calculated by:
\begin{equation}
\label{eq:4}
p(t) = v(t)i(t) = \frac{v^{2}(t)}{R}
\end{equation}
Let's go back to equation (\ref{eq:2}) and equation(\ref{eq:3}), if
\(E_{\infty}< \infty\) we say that the signal has finite energy otherwise
infinite energy. If \(P_{\infty} <\infty\) we say that the signal has finite
power otherwise infinite power.

Next let's determine the values of \(P_{\infty}\) and \(E_{\infty}\) for the
given signals.

\(\mathbf{(a)}: x_{1}(t)= e^{-2t}u(t)\) :

\begin{eqnarray*}
E_{\infty}  & =  & \int_{\infty}^{\infty} |e^{-2t}u(t)|^{2} \mathrm{d}t \\
&=& \int_{0}^{\infty} e^{-4t} \mathrm{d}t \\
&=& \frac{1}{4}
\end{eqnarray*}
So, it's straightforward that:
\begin{equation}
\label{eq:5}
P_{\infty} = \lim_{T\to \infty} \frac{E_{\infty}}{2T}  = 0
\end{equation}


#+name: figprob1-3
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=-1,ymax=1.5,xmin=0,xmax=4,
samples=300,
extra x ticks={0},
tick label style={font=\footnotesize}]
\addplot [mycolor,very thick,mark color=mycolor,domain=-3:8] {exp(-x)};
\node at (2,2) {$f(x) = \mathrm e^{-2t}u(t)$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figprob1-3
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(figprob1-3.pdf,figprob1-3.png)}}}



 \(\mathbf{(b)}: x_{2}(t)= e^{i(2t+\pi/4)}\)

We have \(|e^{i(2t+\pi/4)}| = 1\) , therefore
\begin{eqnarray*}
E_{\infty}&=& \int_{\infty}^{\infty} |x_{2}(t)= e^{i(2t+\pi/4)}|^{2} \mathrm{d}t \\
&=& \infty
\end{eqnarray*}

For power \(P_{\infty}\), we have:
\begin{eqnarray*}
P_{\infty}&= &\lim_{T\to\infty} \frac{1}{2T}\int_{-T}^{T} |x_{2}(t)|^{2} \mathrm{d}t  \\
&=& 1
\end{eqnarray*}

This signal has constant power. If you keep the concept of rotation mentioned in
Problem [[prob11]], you will notice immediately that all the points generated by
\(x_{2}(t)\) lies on the unit circle.

\(\mathbf{(c)}:x_{3}(t)=\cos(t)\)

\begin{eqnarray*}
E_{\infty}&=& \lim_{T\to\infty} \int_{-\infty}^{\infty} |x_{3}(t)|^{2} \mathrm{d}t \\
&=& \int_{\infty}^{\infty} \cos(t)^{2} \mathrm{d}t = \infty
\end{eqnarray*}

\begin{eqnarray*}
P_{\infty}&=& \lim_{T\to\infty} \frac{1}{2T}\int_{-T}^{T} |x_{3}(t)|^{2} \mathrm{d}t  \\
&=& \lim_{T\to\infty}\frac{1}{2T} \int_{-T}^{T} \cos(t)^{2} \mathrm{d}t \\
&=& \lim_{T\to\infty} \frac{1}{2T} \int_{-T}^{T} \frac{1+\cos(2t)}{2} \mathrm{d}t = \frac{1}{2}
\end{eqnarray*}

\(x_{3}(t)\)  can be visualized as follows:

#+name: figprob1-3c
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3c.png"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
  \begin{axis}
    [
    samples=300,
    axis lines=middle,
    xtick={-2*pi,-pi,pi,2*pi},
    ytick={-1,1},
    ymin=-1.3,
    ymax=1.3,
    xticklabels={$-2\pi$,$-\pi$,$\pi$,$2\pi$},
    ]
    \addplot[mycolor, thick,domain=-3*pi:3*pi] {cos(deg(x))};
  \end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figprob1-3c
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3c.png]]


#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(figprob1-3c.pdf,figprob1-3c.png)}}}

\(\mathbf{(d):} \quad x_{1}[n] = (\tfrac{1}{2})^{n} u[n]\)

By definition, we have:
\begin{eqnarray*}
E_{\infty}&=&\lim_{N\to\infty}\sum_{n=-N}^{N} \big((\tfrac{1}{2})^{n}u[n]\big)^{2} \\
&=&\lim_{N\to\infty}\sum_{n=0}^{N} (\tfrac{1}{4})^{n} \\
&=& \tfrac{4}{3}
\end{eqnarray*}

Then,
\begin{eqnarray*}
P_{\infty}&=& \lim_{N\to\infty} \frac{1}{2N+1} \sum_{n=-N}^{N} \big((\tfrac{1}{2})^{n}u[n]\big)^{2}   \\
&=& 0
\end{eqnarray*}

\(x_{1}[n]\) can visualized as:
#+name: figprob1-3d
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3d.png"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
  \begin{axis}
    [
    extra x ticks={0},
    axis lines=middle,
    xtick={0,1,2,...,8},
    ytick={-1,1},
    ymin=0,
    ymax=1.3,
    ]
    \addplot[ycomb,mycolor,mark=*,mark color = mycolor, thick,domain=0:8] { (1/2)^x };
  \end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figprob1-3d
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figprob1-3d.png]]


#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.8\textwidth :align center
{{{if-latex(figprob1-3d.pdf,figprob1-3d.png)}}}




**** DONE Problem 1.4
[2020-01-14 Tue 22:15]

#+ATTR_LATEX: :options []{prob:1-4}
#+NAME: prob:1-4
#+begin_prob
 Problem 1.4: Let \(x[n]\) be a signal with \(x[n]=0\) for\(n< -2\) and \(n>4\),
for each signal given below, determine the values of \(n\) for which it is
guaranteed to be zero.
\begin{eqnarray*}
\mathbf{ (a) } & & x[n-3] \\
\mathbf{ (b) } & & x[n+4] \\
\mathbf{ (c) } & & x[-n]  \\
\mathbf{ (d) } & & x[-n+2] \\
\mathbf{ (e) } & & x[-n-2]
\end{eqnarray*}
#+end_prob

For the given signals \(\mathbf{(a)}\) to \(\mathbf{(e)}\), the transformations
of the variable \(n\) will change the interval in which the signals are zero.
For the convenience of calculation, we write the origin signal as:
\begin{equation*}
x[m] = 0, m< -2 \quad \mathrm{and} \quad m>4
\end{equation*}

We can visualize \(x(m)\) as below (I just give an example, you can name any
signal that satisfy \(x[m] = 0, m< -2 \ \mathrm{and} \ m>4 \)):

#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-6,xmax=9,xtick=data,
extra x ticks={0,4},
hide y axis,
tick label style={font=\footnotesize}]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,domain=-3:8,mark size = 1.4pt,] coordinates { (-4,0) (-3,0) (-2,0.2) (-1,0.4) (0,0.6) (1,0.8) (2,1.0) (3,1.2) (4,1.4) (5,0) (6,0) (7,0) };
\node at (8,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (-5,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (-2,1) {\large $\color{mycolor}{{x[n]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS:
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4.pdf]]


#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4.pdf,figProb1-4.png)}}}


\(\mathbf{(a)}:x[n-3]\)

    For signal \(\mathbf{(a)}\), to get the interval where \(x[n-3] = 0 \), we have:
    \begin{eqnarray*}
      m=n-3 &<& -2 \\
      m=n-3 &>& 4
    \end{eqnarray*}
    Then, we have \( n < 1 \ \mathrm{and} \ n > 7\) from which we can see that
   the new signal is a right shift three relative to the origin signal, i.e. new
   signal is delayed with three.


#+name: figProb1-4a
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4a.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-3,xmax=10,xtick=data,
hide y axis,
extra x ticks={0},
tick label style={font=\footnotesize}]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,domain=-3:8,mark size = 1.4pt,] coordinates { (-1,0) (0,0) (1,0.2) (2,0.4) (3,0.6) (4,0.8) (5,1.0) (6,1.2) (7,1.4) (8,0) (9,0) };
\node at (10,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (-2,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (1,1){\large $\color{mycolor}{{x[n-3]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figProb1-4a
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4a.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4a.pdf,figProb1-4a.png)}}}

\(\mathbf{(b)}:x[n+4]\)

   For signal \(\mathbf{(b)}\), we have:
   \begin{eqnarray*}
   m=n+4&<&-2 \\
   m=n+4&>&4
   \end{eqnarray*}
   Then, we have \(n<-6\ \mathrm{and}\ n>0\) from which we can see that the new
   signal is a left shift four relative to the origin singal, i.e. new
   signal is advanced with four.

#+name: figProb1-4b
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4b.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-9,xmax=4,xtick=data,
hide y axis,
extra x ticks={0},
tick label style={font=\footnotesize}]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,domain=-3:8,mark size = 1.4pt,] coordinates {(-9,0) (-8,0) (-7,0) (-6,0) (-5,0) (-4,0) (-6,0.2) (-5,0.4) (-4,0.6) (-3,0.8) (-2,1.0) (-1,1.2) (0,1.4) (1,0) (2,0) (3,0) };
\node at (3,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (-8,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (-5,1){\large $\color{mycolor}{{x[n+4]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figProb1-4b
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4b.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4b.pdf,figProb1-4b.png)}}}


\(\mathbf{(c)}: x[-n]\)

   For signal \(\mathbf{( c )}\), we have:
   \begin{eqnarray*}
   m=-n&<&-2 \\
   m=-n&>&4
   \end{eqnarray*}

   Then, we have \(n>2\ \mathrm{and} \ n<-4\) from which we can see that the new
   signal is a reversal of the origin signal.

#+name: figProb1-4c
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4c.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-9,xmax=6,xtick=data,
extra x ticks={0,4},
hide y axis,
tick label style={font=\footnotesize}]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,domain=-3:8,mark size = 1.4pt,] coordinates { (4,0) (3,0) (2,0.2) (1,0.4) (0,0.6) (-1,0.8) (-2,1.0) (-3,1.2) (-4,1.4) (-5,0) (-6,0) (-7,0) };
\node at (-8,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (5,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (2,1) {\large $\color{mycolor}{{x[-n]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figProb1-4c
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4c.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4c.pdf,figProb1-4c.png)}}}


\(\mathbf{(d)}: x[-n+2]\)

   for signal \(\mathbf{(d)}\), we have:
   \begin{eqnarray*}
   m=-n+2&<&-2 \\
   m=-n+2&>&4
   \end{eqnarray*}
   Then, we have \(n>4\ \mathrm{and}\ n<-2\). For \(x[-n+2]\), we can first
   flip the original signal then right shift the flipped signal by 2. Notice the
   contents in the brackets \(-(n+2)\). I would like treat it as \(-(n-2)\), by
   which I know that the minus symbol means reversal and \(-2\) means right
   shift by 2.

#+name: figProb1-4d
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4d.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-7,xmax=8,xtick=data,
extra x ticks={0,4},
hide y axis,
tick label style={font=\footnotesize},
]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,mark size = 1.4pt,] coordinates { (6,0) (5,0) (4,0.2) (3,0.4) (2,0.6) (1,0.8) (0,1.0) (-1,1.2) (-2,1.4) (-3,0) (-4,0) (-5,0) };
\node at (-6,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (7,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (4,1) {\large $\color{mycolor}{{x[-n+2]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figProb1-4d
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4d.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4d.pdf,figProb1-4d.png)}}}



\(\mathbf{(e)}: x[-n-2]\)

   For signal \(\mathbf{(e)}\), we have:

   \begin{eqnarray*}
   m=-n-2&<&-2 \\
   m=-n-2&>&4
   \end{eqnarray*}

   Then, we have \( n>0 \ \mathrm{and}\ n<-6 \). To get the new signal, we have
   to filp the original signal first then left shift the flipped signal by two.

#+name: figProb1-4e
#+header: :file  "~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4e.pdf"
#+begin_src latex -n -r :results raw :exports none
\begin{tikzpicture}
\definecolor{mycolor}{RGB}{139,0,0};
\begin{axis}
[axis lines=middle,ymin=0,ymax=1.5,xmin=-9,xmax=4,xtick=data,
extra x ticks={0,4},
hide y axis,
tick label style={font=\footnotesize}]
\addplot [ycomb,mycolor,very thick,mark=*,mark color=mycolor,domain=-3:8,mark size = 1.4pt,] coordinates {(3,0) (2,0) (1,0) (0,0.2) (-1,0.4) (-2,0.6) (-3,0.8) (-4,1.0) (-5,1.2) (-6,1.4) (-7,0) (-8,0) (-9,0) };
\node at (-8,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (3,0.5) {\large $\color{mycolor}{\mathbf{\ldots}}$};
\node at (0,1) {\large $\color{mycolor}{{x[-n-2]}}$};
\end{axis}
\end{tikzpicture}
#+end_src

#+RESULTS: figProb1-4e
[[file:~/Dropbox/mstemc_hugo/static/img/tikz/figProb1-4e.pdf]]

#+ATTR_HTML:  :width 80% :align center
#+ATTR_LATEX: :width 0.5\textwidth :align center
{{{if-latex(figProb1-4e.pdf,figProb1-4e.png)}}}

**** DONE Problem 1.5
[2020-01-15 Wed 09:39]

#+ATTR_LATEX: :options []{prob:1-5}
#+NAME: prob:1-5
#+begin_prob
Let \(x(t)\) be a signal with \(x(t)=0, \ x<3\). For each signal
given below, determine the values of \(t\) for which it is guaranteed to be
zero.

\begin{equation*}
\begin{array}{ll}
\mathbf{(a)}: x(1-t) \qquad  &   \mathbf{(b)}: x(1-t) + x(2-t)\qquad   \\
\mathbf{(c)}: x(1-t)x(2-t)\qquad &  \mathbf{(d)}: x(3t) \qquad  \\
  \mathbf{(e)}: x(t/3)\qquad & \\
\end{array}
\end{equation*}
#+end_prob



For signal \(\mathbf{(a)}: x(1-t) \),  we have:
\begin{equation*}
1-t < 3
\end{equation*}

So, \(t>-2\). Signal \(\mathbf{(a)}: x(1-t) \) can be achieved by flipping the
origin signal first then right shifting one.

For signal \(\mathbf{(b)}: x(1-t) + x(2-t) \) , we have:
\begin{eqnarray*}
1-t&< &3 \\
2-t&<& 3
\end{eqnarray*}
Because it a "\(+\)" between \(x(1-t)\) and \(x(2-t)\) so only when both of the
two signals are zero, the result will be zero. For the first part we have the
value zero when \(t>-2\) the second \(t>-1\), so the result will be the
intersect of these two intervals, i.e. \(t>-1\) . we achieve signal
\(\mathbf{(b)}: x(1-t) + x(2-t) \) by adding signal \(\mathbf{(a)}: x(1-t) \)
with a second signal \(x(2-t)\) which can be achieved by flipping it first then
right shifting two.


For signal \(\mathbf{(c)}: x(1-t)x(2-t) \), \(x(1-t)\) is multiplied by
\(x(2-t)\), so if any one of these two signals is zero, the result is zero.
Based on the result of signal \(\mathbf{( b )}\), we have \(t>-2\).

For signal \(\mathbf{( d )}: x(3t)\), we have:
\begin{equation*}
3t < 3
\end{equation*}
Then, \(t<1\). The signal is compressed by \(3\).

For signal \(\mathbf{( e )}: x(t/3)\), we have:
\begin{equation*}
t/3 < 3
\end{equation*}
Then, \(t<9\). The signal is strtched by \(3\).
**** Problem 1.6
     [2020-01-21 Tue 21:36]

**** Problem 1.7
     [2020-01-22 Wed 06:35]

     #+ATTR_LATEX: :options []{prob:1-7}
     #+NAME: prob:1-7
     #+begin_prob
     For each signal given below, determine all the values of the independent
     variable at which the even part of the signal is guaranteed to be zero.

     \begin{equation*}
     \small
     \begin{array}{ll}
      \mathbf{(a)}: x_{1}[n] = u[n] - u[n-4] \qquad  &   \mathbf{(b)}: x_{2}(t) = \sin(\tfrac{1}{2} t) \qquad   \\
       \mathbf{(c)}: x_{3}[n] = (\frac{1}{2})^{n} u[n-3] \qquad &  \mathbf{(d)}: x_{4}(t) = e^{-5t}u(t+2) \\
     \end{array}
     \end{equation*}
     #+end_prob



**** Problem 1.6
Determine whether or not each of the following signals is periodic:

\begin{equation*}
\begin{array}{lll}
\mathbf{(a)}: x_{1}(t) = 2e^{i(t+\pi/4)}u(t)   &  \mathbf{( b )}: x_{2}[n] = u[n] + u[-n]  &\\
\mathbf{(c)}: x_{3}[n] = \sum_{k=-\infty}^{\infty} \{ \delta[n-4k] - \delta[n-1-4k] \} &  & \\
\end{array}
\end{equation*}

- \(x_{1}(t)\) is not periodic because \(u(t) = 0, t<0\)
- \(x_{2}[n]\) is not periodic because
  \begin{equation*}
  x_{2}[n] =
  \begin{cases}
  2 & n=0 \\
  1 & n\neq 0
  \end{cases}
  \end{equation*}
- For signal \(x_{3}[n]\) we know that with a \(n\), \(\delta[n-4k]\) and
  \(\delta[n-1-4k]\) can not be zero at the same time. Because \(k\) and
  \(n-4k\) must be integers, \(\delta[n-4k]\) and \(\delta[n-1-4k]\) will repeat
  themself every four steps. Furthermore, for every \(n\), the \(k\) runs from
  \(-\infty \) to \(\infty\), and only one \(k\) will match the \(n\) to set
  \(\delta[n-4k]\) or \(\delta[n-1-4k]\) as zero. We can test it by setting
  \(n = 0,1,2,\ldots\)
  \begin{eqnarray*}
  && x[0] = 1,\quad x[1] = -1, \quad x[2] = 0, \quad x[3] = 0 \\
  && x[4] = 1,\quad x[5] = -1, \quad x[6] = 0, \quad x[7] = 0 \\
  && x[8] = 1,\quad x[9] = -1, \quad x[10] = 0, \quad x[11] = 0
  \end{eqnarray*}

  #+caption: caption
  #+name: figprob1-6
  #+header: :file  "../../img/tikz/figprob1-6.pdf"
  #+begin_src latex -n -r :results raw :exports none
  \begin{tikzpicture}
  \definecolor{mycolor}{RGB}{139,0,0};
  \draw[very thick,-Stealth] (-9,0) -- (8,0);
  \foreach \x in {-8,-4,0,4}
    {
     \filldraw[draw=mycolor,fill=mycolor] (\x,0) + (2,0) circle[radius=3pt];
     \filldraw[draw=mycolor,fill=mycolor] (\x,0) + (3,0) circle[radius=3pt];
     \draw[mycolor,very thick,-Circle,] (\x,0) +(1,0) -- +(1,-1) node[right] {$-1$};
     \draw[mycolor,very thick,-{Circle},] (\x,0)  -- +(0,1) node[right] {$1$};
    }
  \foreach \x in {-9,-8,-7,...,8}
   \node[semitransparent,green] at (\x,-0.3) {$\x$};
  \end{tikzpicture}
  #+end_src

  #+RESULTS: figprob1-6
  [[file:../../img/tikz/figprob1-6.pdf]]

  #+ATTR_HTML:  :width 800 :align center
  #+ATTR_LATEX: :width 0.5\textwidth :align center
  {{{if-latex(figprob1-6.pdf,figprob1-6.png)}}}

**** DONE Problem 1.8
[2020-01-22 Wed 15:18]

Express the real part of each of the following signals in the form
\(Ae^{-at}\cos(\omega t + \phi)\), where \(A,a,\omega, \phi\) are real numbers
with \(A>0\) and \(-\pi < \phi \leq \pi \):
\begin{equation*}
\begin{array}{ll}
  \mathbf{( a )}: x_{1}(t) = -2 &  \mathbf{( b )}: x_{2}(t) = \sqrt{2}e^{i\pi/4}\cos(3t + 2\pi) \\
  \mathbf{( c )}: x_{3}(t) = e^{-t}\sin(3t + \pi) & \mathbf{( d )}: x_{4}(t) = i e^{(-2+i100)t}
\end{array}
\end{equation*}

a. \(\mathcal{R}\{x_{1}(t)\} = -2 = 2e^{-0t}\cos(0t + \pi) \) with \(A = 2,
   a=0, \omega = 0, \phi = \pi\)
b. \( \mathcal{R} \{x_{2}(t)\} = \mathcal{R} \{ \sqrt{2} ( \cos( \pi/4 ) + i
   \sin (\pi/4) ) \cos(3t) \} = \cos(3t) = e^{-0t}\cos( 3t + 0 ) \) with \(A =
   1\), \( a = 0 \), \( \omega = 3 \),\(\phi = 0\)
c. \( \mathcal{R} \{ x_{3}(t) \} = \mathcal{R} \{ e^{-t} \sin ( 3t + \pi )  \}
   = e^{-t}\cos(3t + \pi/2) \) with \(A=1\), \(a=1\), \(\omega=3\), \(\phi=\pi/2\)
d. \( \mathcal{R} \{x_{4}(t)\}   = \mathcal{R} \{
   e^{i\pi/2} e^{(-2+i100)t} \} = \mathcal{R}\{ e^{(-2 + i100)t + i\pi/2} \} =
   e^{-2t}\cos(100t + \pi/2) \) with\(A = 1\), \(a=2\), \(\omega=100\), \(\phi=\pi/2\)

**** Problem 1.9
[2020-01-22 Wed 16:23]

Determine whether or not each of the following signals is periodic. If a signal
is periodic, specify its fundamental period.

\begin{equation*}
\begin{array}{ll}
  \mathbf{( a )}: x_{1}(t) = ie^{i10t} &  \mathbf{( b )}: x_{2}(t) = e^{(-1 + i)t}\\
  \mathbf{( c )}: x_{3}[n] = e^{i7\pi n} & \mathbf{( d )}: x_{4}[n] = 3e^{i3\pi (n + 1/2)/5} \\
  \mathbf{( e )}: x_{5}[n] = 3e^{i3/5(n+1/2)}
\end{array}
\end{equation*}

During figuring all the problems, we have to keep in mind that for a complex
number after rotating \(2\pi \) around the origin the number returns to itself.

a.  For \(x_{1}(t)\), only when phase \(10t\) increases multiples of  \(2\pi\),
   does the signal returns to itself. So the fundamental period is \(2\pi/20 =
   \pi/10\) .

* Projects                                         :project:
[2019-10-05 Sat 16:53]

** TODO my workflow of creating a video
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: my-workflow-of-creating-a-video
:EXPORT_HUGO_SECTION: project
:EXPORT_DESCRIPTION: This collection of Videos and Posts describes my workflow of creating a video. Usage of some tools and methods are covered.
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_pdf "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_code "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :url_video "#"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :projects '("a")
:EXPORT_FILE_NAME: index
:END:

#+INCLUDE: "./project/my-workflow-of-creating-a-video.org"

* Courses                                           :course:
[2019-10-05 Sat 16:53]
