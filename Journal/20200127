* Saturday, 02/01/20
:PROPERTIES:
:CREATED:  20200201
:END:
** 09:48 hugo academic 注意事项：
*** project 下面关联对应的 post 和 video

[2020-02-01 Sat 09:48]

每一个 post 和 video 都可以和一个 project 进行关联起来。这样在每一个
project 的主页下面会有对应的 post 和 video 关联起来。

具体实现是每一个 post 和 video 的 front matter 都需要加上

#+begin_example
projects = ["project-my-workflow-of-creating-a-video", "project-how-do-i-make-a-video"]
#+end_example

注意凡是添加了这两个 tag 的 post 或者 video 都会被链接到该 project 页面底部。这样
起到了汇聚作用。

特别注意：
=project-my-workflow-of-creating-a-video= 和  =project-how-do-i-make-a-video= 是
对应的 project 的文件夹名字（导出为 bundle）或者文件名（导出为单个文件）。

对应的 org-capture 是：
#+begin_src emacs-lisp
("v" "Hugo:Video"
 entry (file+olp "~/Dropbox/zorg/mstemc/mstemc.org" "Videos")
 (function org-hugo-new-subtree-video-capture-template)
 :clock-in t :clock-resume t)
("b" "Hugo:Post"
 entry (file+olp "~/Dropbox/zorg/mstemc/mstemc.org" "Posts")
 (function org-hugo-new-subtree-post-capture-template)
 :clock-in t :clock-resume t)
#+end_src

里面的两个函数是：

#+begin_src emacs-lisp
  ;;video
;;;###autoload
  (defun org-hugo-new-subtree-video-capture-template ()
    "Returns `org-capture' template string for new Hugo post.
See `org-capture-templates' for more information."
    (let* ((title (read-from-minibuffer "Video Title: ")) ;Prompt to enter the post title
           (fname (org-hugo-slug title)))
      (mapconcat #'identity
                 `(
                   ,(concat "* TODO " title)
                   ":PROPERTIES:"
                   ,(concat ":EXPORT_FILE_NAME: " "index")
                   ,(concat ":LATEX_TITLE: " title)
                   ,(concat ":EXPORT_HUGO_SECTION: " "publication")
                   ,(concat ":EXPORT_HUGO_BUNDLE: " fname)
                   ,(concat ":EXPORT_DESCRIPTION: "  "summary of this post")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_pdf " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_code " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_video " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_project " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":projects " "'(\"\" \"\")")
                   ":END:"
                   "%T\n\n%?\n")                ;Place the cursor here finally
                 "\n")))

  ;;post
;;;###autoload
  (defun org-hugo-new-subtree-post-capture-template ()
    "Returns `org-capture' template string for new Hugo post.
See `org-capture-templates' for more information."
    (let* ((title (read-from-minibuffer "Post Title: ")) ;Prompt to enter the post title
           (fname (org-hugo-slug title)))
      (mapconcat #'identity
                 `(
                   ,(concat "* TODO " title)
                   ":PROPERTIES:"
                   ,(concat ":EXPORT_FILE_NAME: " "index")
                   ,(concat ":LATEX_TITLE: " title)
                   ,(concat ":EXPORT_HUGO_SECTION: " "post")
                   ,(concat ":EXPORT_HUGO_BUNDLE: " fname)
                   ,(concat ":EXPORT_DESCRIPTION: "  "summary of this post")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_pdf " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_code " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_video " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":url_project " "\"#\"")
                   ,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":projects " "'(\"\" \"\")")
                   ":END:"
                   "%T\n\n%?\n")                ;Place the cursor here finally
                 "\n")))
#+end_src

注意函数中的
#+begin_src emacs-lisp
,(concat ":EXPORT_HUGO_CUSTOM_FRONT_MATTER+: " ":projects " "'(\"\" \"\")")
#+end_src
** 16:41 dired mode 隐藏信息无效信息

dired-hide-details-mode 快捷键是 =(= 用了这个命令之后特别清爽。
